{"version":3,"sources":["components/article.js","components/nav.js","App.js","serviceWorker.js","index.js"],"names":["Article","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","update","bind","assertThisInitialized","article","targets","react_default","a","createElement","id","name","onChange","map","t","index","key","e","target","value","group","document","getElementById","title","selectedIndex","type","checked","check","onClick","preview","assign","React","Component","Menu","state","search","open","handleSearch","bulk","className","placeholder","autoFocus","event","query","setState","list","data","results","l","toUpperCase","includes","push","_this2","searchList","components_article","url","_this3","changes","values","keys","find","split","setAttribute","checks","c","length","item","_this4","expand","searchbar","fill","App","raw","DB","filtered","changelog","editing","createGroup","updateRecord","x","y","z","changekey","changevalue","console","log","b","oldRaw","newGroups","rawIndex","indexOf","splice","filteredIndex","dummy","onKeyPress","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","body","appendChild","click","remove","groups","section","f_groups","components_nav","fg","new","edit","download","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+jpBA+BeA,cA5Bb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IAFGA,sEAIZU,GACL,IAAIC,EAAUR,KAAKJ,MAAMY,QACzB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,GAAIL,EAAU,UAAWM,KAAMN,EAASO,SAAUd,KAAKI,QAC7DK,EAAAC,EAAAC,cAAA,sCACCH,EAAQO,IAAI,SAACC,EAAGC,GAAJ,OACXR,EAAAC,EAAAC,cAAA,UAAQO,IAAKD,GAAQD,qCAKtBG,GACkB,yBAAnBA,EAAEC,OAAOC,QACXrB,KAAKJ,MAAMQ,OAAOe,EAAEC,OAAOC,MAAOF,EAAEC,OAAOP,KAAMb,KAAKJ,MAAM0B,OAC5DC,SAASC,eAAexB,KAAKJ,MAAM6B,MAAQ,WAAWC,cAAgB,oCAIxE,OACEjB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,WAAWd,KAAMb,KAAKJ,MAAM6B,MAAOG,QAAS5B,KAAKJ,MAAMgC,QAASd,SAAUd,KAAKJ,MAAMiC,QAAepB,EAAAC,EAAAC,cAAA,KAAGmB,QAAS9B,KAAKJ,MAAMmC,SAAU/B,KAAKJ,MAAM6B,OAAWzB,KAAKgC,OAAOhC,KAAKJ,MAAM6B,eAxBlLQ,IAAMC,WCwIbC,qBArIb,SAAAA,EAAYvC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,IACjBtC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KAAMJ,KACDwC,MAAQ,CACXC,OAAQ,GACRC,MAAM,EACNV,QAAS,IAEX/B,EAAK0C,aAAe1C,EAAK0C,aAAalC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAK2C,KAAO3C,EAAK2C,KAAKnC,KAAVP,OAAAQ,EAAA,EAAAR,CAAAD,IACZA,EAAKgC,MAAQhC,EAAKgC,MAAMxB,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IATIA,2EAajB,IAAIW,EAAUR,KAAKJ,MAAMY,QACzB,GAAIR,KAAKoC,MAAME,KACb,OACE7B,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,OACbhC,EAAAC,EAAAC,cAAA,SAAO8B,UAAU,SAASd,KAAK,OAAON,MAAOrB,KAAKoC,MAAMC,OAAQvB,SAAUd,KAAKuC,aAAcG,YAAY,YAAYC,WAAS,IAC9HlC,EAAAC,EAAAC,cAAA,UAAQC,GAAIZ,KAAKJ,MAAM0B,MAAQ,UAAWR,SAAUd,KAAKwC,MACvD/B,EAAAC,EAAAC,cAAA,sCACCH,EAAQO,IAAI,SAAAC,GAAC,OACZP,EAAAC,EAAAC,cAAA,cAASK,4CAOR4B,GACX,IAAIC,EAAQD,EAAMxB,OAAOC,MACzBrB,KAAK8C,SAAS,CAACT,OAAQQ,yCAGvB,IAAIE,EAAO/C,KAAKJ,MAAMoD,KAClBC,EAAU,GACd,IAAK,IAAIC,KAAKH,EACRA,EAAKG,GAAGC,cAAcC,SAASpD,KAAKoC,MAAMC,OAAOc,gBACnDF,EAAQI,KAAKN,EAAKG,IAGtB,OAAOD,iCAGF,IAAAK,EAAAtD,KACDiD,EAAUjD,KAAKuD,aACnB,GAAIvD,KAAKoC,MAAME,KACb,OACE7B,EAAAC,EAAAC,cAAA,UACGsC,EAAQlC,IAAI,SAACR,EAAQU,GAAT,OACXR,EAAAC,EAAAC,cAAC6C,EAAD,CAAStC,IAAKD,EAAOQ,MAAOlB,EAASwB,QAAS,kBAAMuB,EAAKvB,QAAQxB,IAAUC,QAAS8C,EAAK1D,MAAMY,QAASc,MAAOgC,EAAK1D,MAAM0B,MAAOlB,OAAQkD,EAAK1D,MAAMQ,OAAQwB,QAAS0B,EAAK1B,QAAQrB,GAAUsB,MAAOyB,EAAKzB,4CAO5M7B,KAAKoC,MAAME,KACbtC,KAAK8C,SAAS,CAACR,MAAK,IAEpBtC,KAAK8C,SAAS,CAACR,MAAK,oCAGhBb,GAAO,IAKTgC,EALSC,EAAA1D,KAET2D,EAAU3D,KAAKJ,MAAM+D,QACrBZ,EAAOjD,OAAO8D,OAAOD,GACrBE,EAAO/D,OAAO+D,KAAKF,GAEnBZ,EAAKK,SAASpD,KAAKJ,MAAM0B,MAAQ,IAAMG,GAGzCgC,EAAM,+BAFOI,EAAKC,KAAK,SAAA5C,GAAG,OAAIyC,EAAQzC,KAASwC,EAAK9D,MAAM0B,MAAQ,IAAMG,IACrDsC,MAAM,KACoB,GAAK,IAAMtC,EAExDgC,EAAM,+BAAiCzD,KAAKJ,MAAM0B,MAAQ,IAAMG,EAElEF,SAASC,eAAe,WAAWwC,aAAa,MAAOP,gCAEpDtC,GACH,IAAI8C,EAASjE,KAAKoC,MAAMR,QACpBmB,EAAO,GACX,IAAK,IAAImB,KAAKD,EACRA,EAAOC,KACTnB,EAAKM,KAAKa,GACVD,EAAOC,IAAK,GAMhB,GAHoB,IAAhBnB,EAAKoB,SACPpB,EAAO/C,KAAKuD,cAES,yBAAnBpC,EAAEC,OAAOC,MACX,IAAK,IAAI6B,KAAKH,EACZ/C,KAAKJ,MAAMQ,OAAOe,EAAEC,OAAOC,MAAO0B,EAAKG,GAAIlD,KAAKJ,MAAM0B,OAG1DC,SAASC,eAAexB,KAAKJ,MAAM0B,MAAQ,WAAWI,cAAgB,IACtE1B,KAAK8C,SAAS,CAAClB,QAASqC,kCAEpB9C,GACJ,IAAIZ,EAAUY,EAAEC,OAAOP,KACnBoD,EAASjE,KAAKoC,MAAMR,QACnBqC,EAAO1D,KACV0D,EAAO1D,IAAW,GAEhBP,KAAKoC,MAAMR,QAAQrB,GACrB0D,EAAO1D,IAAW,EAElB0D,EAAO1D,IAAW,EAEpBP,KAAK8C,SAAS,CAAClB,QAASqC,oCAElBG,GACN,IAAIH,EAASjE,KAAKoC,MAAMR,QACxB,QAAIqC,EAAOG,IACFH,EAAOG,oCAKT,IAAAC,EAAArE,KACP,OACES,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,QAAQ7B,GAAIZ,KAAKJ,MAAM0B,OACpCb,EAAAC,EAAAC,cAAA,UAAQmB,QAAS,kBAAMuC,EAAKC,WACzBtE,KAAKJ,MAAM0B,MAAMb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,cAASX,KAAKJ,MAAMoD,KAAKmB,UAElDnE,KAAKuE,YACN9D,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,WACZzC,KAAKwE,gBA/HGvC,IAAMC,mBCkHVuC,qBAhHb,SAAAA,EAAY7E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,IACjB5E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2E,GAAAtE,KAAAH,KAAMJ,KACDwC,MAAQ,CACXsC,IAAKC,EACLC,SAAU,GACVC,UAAU,GACVC,SAAS,GAEXjF,EAAKkF,YAAclF,EAAKkF,YAAY1E,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAKmF,aAAenF,EAAKmF,aAAa3E,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IATHA,mEAWfoF,EAAEC,EAAEC,GACN,IAAIxB,EAAU3D,KAAKoC,MAAMyC,UACrBO,EAAYD,EAAI,IAAMD,EACtBG,EAAcJ,EAAI,IAAMC,EAG5B,GAFAI,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GACRvF,OAAO8D,OAAOD,GAASP,SAASgC,GAAY,CAC9C,IAAIhE,EAAStB,OAAO+D,KAAKF,GAASG,KAAK,SAAA5C,GAAG,OAAIyC,EAAQzC,KAASkE,IAC/DzB,EAAQvC,GAAUiE,OAElB1B,EAAQyB,GAAaC,EAEvB,OAAO1B,uCAEIjD,EAAG8E,EAAGtB,GACjB,IAGIuB,EAHAF,EAAMvF,KAAKuF,IAAI7E,EAAE8E,EAAEtB,GACnBwB,EAAY1F,KAAKoC,MAAMwC,SAG3B,GAFAc,EAAUhF,GAAG2C,KAAKmC,GAEdxF,KAAKoC,MAAMsC,IAAIR,GAAI,CAErB,IAAIyB,GADJF,EAASzF,KAAKoC,MAAMsC,KACER,GAAG0B,QAAQJ,GACjCC,EAAOvB,GAAG2B,OAAOF,EAAU,GAC3B3F,KAAK8C,SAAS,CACZ8B,SAASc,EACThB,IAAIe,EACJZ,UAAUU,QAEP,CAEL,IAAIO,GADJL,EAASzF,KAAKoC,MAAMwC,UACOV,GAAG0B,QAAQJ,GACtCC,EAAOvB,GAAG2B,OAAOC,EAAe,GAChC9F,KAAK8C,SAAS,CAAC8B,SAASc,EAAUb,UAAUU,yCAGpCpE,GACV,GAAc,UAAVA,EAAED,IAAiB,CACrB,IAAI6E,EAAQ/F,KAAKoC,MAAMwC,SACvBmB,EAAM5E,EAAEC,OAAOC,OAAS,GACxBrB,KAAK8C,SAAS,CACZ8B,SAAUmB,EACVjB,SAAS,oCAKb,OAAI9E,KAAKoC,MAAM0C,QAEXrE,EAAAC,EAAAC,cAAA,SAAOC,GAAG,OAAOe,KAAK,OAAOgB,WAAS,EAACqD,WAAYhG,KAAK+E,cAIxD,mDAKJ,IAAIkB,EAAU,gCAAkCC,mBAAmBC,KAAKC,UAAUpG,KAAKoC,MAAMyC,YACzFwB,EAAqB9E,SAASZ,cAAc,KAChD0F,EAAmBrC,aAAa,OAAYiC,GAC5CI,EAAmBrC,aAAa,WAAY,gBAC5CzC,SAAS+E,KAAKC,YAAYF,GAC1BA,EAAmBG,QACnBH,EAAmBI,0CAEZ,IAAAnD,EAAAtD,KACH0G,EAAS,GACb,IAAK,IAAMC,KAAW3G,KAAKoC,MAAMsC,IAC/BgC,EAAOrD,KAAKsD,GAEd,IAAIC,EAAW,GACf,IAAK,IAAM3B,KAAKjF,KAAKoC,MAAMwC,SACzBgC,EAASvD,KAAK4B,GAEhB,OACIxE,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACNH,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAAA,4BACC+F,EAAO3F,IAAI,SAACO,EAAOL,GAAR,OACVR,EAAAC,EAAAC,cAACkG,EAAD,CAAM3F,IAAKD,EAAO+B,KAAMM,EAAKlB,MAAMsC,IAAIpD,GAAQA,MAAOA,EAAOd,QAASoG,EAAUxG,OAAQkD,EAAK0B,aAAcrB,QAASL,EAAKlB,MAAMyC,eAGnIpE,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACNH,EAAAC,EAAAC,cAAA,wBACCiG,EAAS7F,IAAI,SAAC+F,EAAI7F,GAAL,OACZR,EAAAC,EAAAC,cAACkG,EAAD,CAAM3F,IAAKD,EAAO+B,KAAMM,EAAKlB,MAAMwC,SAASkC,GAAKxF,MAAOwF,EAAIC,KAAK,EAAMvG,QAASoG,EAAUxG,OAAQkD,EAAK0B,aAAcrB,QAASL,EAAKlB,MAAMyC,cAE3IpE,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,SACbhC,EAAAC,EAAAC,cAAA,UAAQC,GAAG,YAAYkB,QAAS,kBAAMwB,EAAKR,SAAS,CAACgC,SAAS,MAAQrE,EAAAC,EAAAC,cAAA,KAAG8B,UAAU,gBAAmBzC,KAAKgH,SAE7GvG,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACNH,EAAAC,EAAAC,cAAA,UAAQmB,QAAS,kBAAMwB,EAAK2D,aAA5B,cAGJxG,EAAAC,EAAAC,cAAA,UAAQc,MAAM,YAAWb,GAAG,oBA1GpBqB,IAAMC,YCOJgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/G,EAAAC,EAAAC,cAAC8G,EAAD,MAASlG,SAASC,eAAe,SD2H3C,kBAAmBkG,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.280da6b4.chunk.js","sourcesContent":["import React from 'react';\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n  }\n  assign(article) {\n    let targets = this.props.targets;\n    return (\n      <select id={article + '-filter'} name={article} onChange={this.update}>\n        <option>- Select New Group -</option>\n        {targets.map((t, index) => (\n          <option key={index}>{t}</option>\n        ))}\n      </select>\n    )\n  }\n  update(e) {\n    if (e.target.value !== '- Select New Group -') {\n      this.props.update(e.target.value, e.target.name, this.props.group);\n      document.getElementById(this.props.title + '-filter').selectedIndex = 0;\n    }\n  }\n  render() {\n    return (\n      <li><input type='checkbox' name={this.props.title} checked={this.props.checked} onChange={this.props.check}></input><p onClick={this.props.preview}>{this.props.title}</p>{this.assign(this.props.title)}</li>\n    )\n  }\n}\n\nexport default Article;\n","import React from 'react';\nimport Article from './article.js'\nimport './nav.css';\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      open: false,\n      checked: {}\n    }\n    this.handleSearch = this.handleSearch.bind(this);\n    this.bulk = this.bulk.bind(this);\n    this.check = this.check.bind(this);\n  }\n  // ** Search bar **\n  searchbar() {\n    let targets = this.props.targets;\n    if (this.state.open) {\n      return (\n        <div className='bar'>\n          <input className='search' type=\"text\" value={this.state.search} onChange={this.handleSearch} placeholder=\"Search...\" autoFocus></input>\n          <select id={this.props.group + '-filter'} onChange={this.bulk}>\n            <option>- Select New Group -</option>\n            {targets.map(t => (\n              <option>{t}</option>\n            ))}\n          </select>\n        </div>\n      )\n    }\n  }\n  handleSearch(event) {\n    var query = event.target.value;\n    this.setState({search: query});\n  }\n  searchList() {\n    let list = this.props.data;\n    var results = [];\n    for (var l in list) {\n      if (list[l].toUpperCase().includes(this.state.search.toUpperCase())) {\n        results.push(list[l])\n      }\n    }\n    return results;\n  }\n  // ** Fill results **\n  fill() {\n    var results = this.searchList();\n    if (this.state.open) {\n      return (\n        <ul>\n          {results.map((article,index) => (\n            <Article key={index} title={article} preview={() => this.preview(article)} targets={this.props.targets} group={this.props.group} update={this.props.update} checked={this.checked(article)} check={this.check} />\n          ))}\n        </ul>\n      )\n    }\n  }\n  expand() {\n    if (this.state.open) {\n      this.setState({open:false})\n    } else (\n      this.setState({open:true})\n    )\n  }\n  preview(title) {\n    // var url = 'https://www.papercut.com/kb/' + this.props.group + '/' + title;\n    let changes = this.props.changes;\n    var list = Object.values(changes);\n    var keys = Object.keys(changes);\n    var url;\n    if (list.includes(this.props.group + '.' + title)) {\n      var target = keys.find(key => changes[key] === this.props.group + '.' + title)\n      var group = target.split('.');\n      url = 'https://www.papercut.com/kb/' + group[0] + '/' + title;\n    } else {\n      url = 'https://www.papercut.com/kb/' + this.props.group + '/' + title;\n    }\n    document.getElementById('preview').setAttribute('src', url);\n  }\n  bulk(e) {\n    let checks = this.state.checked;\n    let list = [];\n    for (var c in checks) {\n      if (checks[c]) {\n        list.push(c);\n        checks[c] = false;\n      }\n    }\n    if (list.length === 0) {\n      list = this.searchList();\n    }\n    if (e.target.value !== '- Select New Group -') {\n      for (var l in list) {\n        this.props.update(e.target.value, list[l], this.props.group)\n      }\n    }\n    document.getElementById(this.props.group + '-filter').selectedIndex = '0';\n    this.setState({checked: checks});\n  }\n  check(e) {\n    var article = e.target.name;\n    let checks = this.state.checked;\n    if (!checks[article]) {\n      checks[article] = false;\n    }\n    if (this.state.checked[article]) {\n      checks[article] = false;\n    } else {\n      checks[article] = true;\n    }\n    this.setState({checked: checks});\n  }\n  checked(item) {\n    let checks = this.state.checked;\n    if (checks[item]) {\n      return checks[item];\n    } else {\n      return false;\n    }\n  }\n  render() {\n    return (\n      <div className='group' id={this.props.group}>\n        <header onClick={() => this.expand()}>\n          {this.props.group}<span><strong>{this.props.data.length}</strong></span>\n        </header>\n        {this.searchbar()}\n        <div className='content'>\n          {this.fill()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Menu;\n","import React from 'react';\nimport Menu from './components/nav.js';\nimport DB from './db.json';\nimport './app.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      raw: DB,\n      filtered: {},\n      changelog:{},\n      editing: false\n    }\n    this.createGroup = this.createGroup.bind(this);\n    this.updateRecord = this.updateRecord.bind(this);\n  }\n  log(x,y,z) {\n    let changes = this.state.changelog;\n    var changekey = z + '.' + y;\n    var changevalue = x + '.' + y;\n    console.log(changekey);\n    console.log(changevalue);\n    if (Object.values(changes).includes(changekey)) {\n      var target = Object.keys(changes).find(key => changes[key] === changekey);\n      changes[target] = changevalue;\n    } else {\n      changes[changekey] = changevalue;\n    }\n    return(changes)\n  }\n  updateRecord(a, b, c) {\n    var log = this.log(a,b,c);\n    let newGroups = this.state.filtered;\n    newGroups[a].push(b);\n    var oldRaw;\n    if (this.state.raw[c]) {\n      oldRaw = this.state.raw\n      var rawIndex = oldRaw[c].indexOf(b);\n      oldRaw[c].splice(rawIndex, 1);\n      this.setState({\n        filtered:newGroups,\n        raw:oldRaw,\n        changelog:log\n      });\n    } else {\n      oldRaw = this.state.filtered\n      var filteredIndex = oldRaw[c].indexOf(b);\n      oldRaw[c].splice(filteredIndex, 1);\n      this.setState({filtered:newGroups,changelog:log});\n    }\n  }\n  createGroup(e) {\n    if (e.key === 'Enter') {\n      let dummy = this.state.filtered;\n      dummy[e.target.value] = [];\n      this.setState({\n        filtered: dummy,\n        editing: false\n      })\n    }\n  }\n  edit() {\n    if (this.state.editing) {\n      return (\n        <input id=\"edit\" type=\"text\" autoFocus onKeyPress={this.createGroup}></input>\n      )\n    } else {\n      return (\n        'Add New Group'\n      )\n    }\n  }\n  download() {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(this.state.changelog));\n    var downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    downloadAnchorNode.setAttribute(\"download\", 'changes.json');\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n  render() {\n    var groups = [];\n    for (const section in this.state.raw) {\n      groups.push(section);\n    }\n    var f_groups = [];\n    for (const x in this.state.filtered) {\n      f_groups.push(x);\n    }\n    return (\n        <div id='main'>\n          <nav id='current'>\n            <h2>Current Groups</h2>\n            {groups.map((group, index) => (\n              <Menu key={index} data={this.state.raw[group]} group={group} targets={f_groups} update={this.updateRecord} changes={this.state.changelog} />\n            ))}\n          </nav>\n          <nav id='future'>\n            <h2>New Groups</h2>\n            {f_groups.map((fg, index) => (\n              <Menu key={index} data={this.state.filtered[fg]} group={fg} new={true} targets={f_groups} update={this.updateRecord} changes={this.state.changelog} />\n            ))}\n            <div className='group'>\n              <header id='new-group' onClick={() => this.setState({editing: true})}><i className='fas fa-plus'></i>{this.edit()}</header>\n            </div>\n            <div id='download'>\n              <button onClick={() => this.download()}>Download</button>\n            </div>\n          </nav>\n          <iframe title='Previewer'id=\"preview\">\n          </iframe>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}