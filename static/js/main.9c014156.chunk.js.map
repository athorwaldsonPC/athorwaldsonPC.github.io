{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","index","map","search","data","localStorage","getItem","prevIndex","page","JSON","parse","setState","dataStr","encodeURIComponent","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","i","setItem","alert","target","value","isChecked","Articles","cat","source","checked","keys","includes","values","push","indexOf","splice","list","_this2","react_default","a","category","key","className","classify","onClick","check","type","length","_this3","id","title","src","getUrl","triggerSearch","save","download","level","nav","Categories","toString","prev","next","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c014156.chunk.js","sourcesContent":["import React from 'react';\nimport Articles from './data/articles.json';\nimport Categories from './data/categories.json';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0,\n      map: {},\n      search: ''\n    }\n  }\n  componentDidMount() {\n    var data = localStorage.getItem('kb-category-map');\n    var prevIndex = localStorage.getItem('kb-category-index');\n    if (data !== null && prevIndex !== null) {\n      var page = JSON.parse(prevIndex)['index'];\n      this.setState({map: JSON.parse(data), index: page});\n    }\n  }\n  download() {\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(this.state.map));\n    var downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    downloadAnchorNode.setAttribute(\"download\", 'categorized.json');\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n  save() {\n    var i = {'index': this.state.index}\n    localStorage.setItem('kb-category-map', JSON.stringify(this.state.map));\n    localStorage.setItem('kb-category-index', JSON.stringify(i));\n    alert('Saved! You can close this tab and pick up where you left off at any time.');\n  }\n  classify(target, value) {\n    if (target === 'previous' && this.state.index === 0) {\n      return 'shade'\n    }\n    if (target === 'checkbox' && this.isChecked(value)) {\n      return 'checked'\n    }\n  }\n  getUrl() {\n    var url = Articles['articles'];\n    return url[this.state.index];\n  }\n  isChecked(cat) {\n    let map = this.state.map;\n    let source = Articles['articles'];\n    var checked = false;\n    if (Object.keys(map).includes(source[this.state.index]) && Object.values(map[source[this.state.index]]).includes(cat)) {\n      checked = true;\n    }\n    return checked;\n  }\n  check(cat) {\n    let map = this.state.map;\n    let source = Articles['articles'];\n    if (!Object.keys(map).includes(source[this.state.index])) {\n      map[source[this.state.index]] = []\n      map[source[this.state.index]].push(cat)\n    } else if (Object.keys(map).includes(source[this.state.index]) && !Object.values(map[source[this.state.index]]).includes(cat)) {\n      map[source[this.state.index]].push(cat)\n    } else if (Object.keys(map).includes(source[this.state.index]) && Object.values(map[source[this.state.index]]).includes(cat)) {\n      var index = map[source[this.state.index]].indexOf(cat);\n      map[source[this.state.index]].splice(index, 1);\n    }\n    this.setState({map: map});\n  }\n  nav(list) {\n    return (\n      <tbody>\n        {list.map((category,index) => (\n          <tr key={index}>\n            <td className={this.classify('checkbox', category)} onClick={() => this.check(category)}><input type='checkbox' checked={this.isChecked(category)}></input>{category}</td>\n          </tr>\n        ))}\n      </tbody>\n    )\n  }\n  next() {\n    if (Articles['articles'].length - this.state.index !== 0) {\n      this.setState({index: this.state.index + 1});\n    }\n  }\n  prev() {\n    if (this.state.index !== 0) {\n      this.setState({index: this.state.index - 1});\n    }\n  }\n  render() {\n    const levels = ['Category 1', 'Category 2','Category 3'];\n    return (\n      <div id='main'>\n        <iframe id='preview' title='preview' src={'https://www.papercut.com/kb/' + this.getUrl()}></iframe>\n        <nav>\n          <div id='badges'>\n            <h4 onClick={() => this.triggerSearch(true)}>{Articles['articles'].length - this.state.index}</h4>\n            <h4 onClick={() => this.save()}><i className='far fa-save'></i></h4>\n            <h4 onClick={() => this.download()}><i className='fas fa-download'></i></h4>\n          </div>\n          <div id='categories'>\n            {levels.map((level,index) => (\n              <table key={index}>\n                <caption>{level}</caption>\n               {this.nav(Categories[index.toString()])}\n              </table>\n            ))}\n          </div>\n          <div id='crawler'>\n            <div>\n              <button className={this.classify('previous')} id='previous' onClick={() => this.prev()}>Previous</button>\n              <button id='next' onClick={() => this.next()}>Next</button>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}